openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controler
      summary: Get a user by its id
      operationId: getUsersById
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: User not found
          content: {}
        "200":
          description: Found the User
          content:
            application/json: {}
    put:
      tags:
      - user-rest-controler
      summary: Modify a user
      operationId: replaceUser
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_Detailed'
        required: true
      responses:
        "404":
          description: User not found
          content: {}
        "406 ":
          description: Not Acceptable user creation the username or email is token
          content:
            application/json: {}
        "201":
          description: Successful user modification
          content:
            application/json: {}
    delete:
      tags:
      - user-rest-controler
      summary: Delete a user
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: User not found
          content: {}
        "200":
          description: Successful user delete
          content:
            application/json: {}
  /api/products/{id}:
    get:
      tags:
      - products-rest-controller
      summary: Get a products by its id
      operationId: getProduct
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Product
          content:
            application/json: {}
    put:
      tags:
      - products-rest-controller
      summary: Modify a Product
      operationId: replaceProduct
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product_Detailed'
        required: true
      responses:
        "404":
          description: Product not found
          content: {}
        "201":
          description: Successful Product modification
          content:
            application/json: {}
        "406":
          description: Not Acceptable Post title exists
    delete:
      tags:
      - products-rest-controller
      summary: Delete a Product
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Product not found
          content: {}
        "201":
          description: Successful Product delete
          content:
            application/json: {}
  /api/users/{id}/orders:
    get:
      tags:
      - user-rest-controler
      summary: Get ordes by iduser
      operationId: getOrdersUsers
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      responses:
        "404":
          description: User not found
          content: {}
        "200":
          description: Found the Orders
          content:
            application/json: {}
    post:
      tags:
      - user-rest-controler
      summary: Create a order
      operationId: orderUser
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: Object Json Type Users
              items:
                $ref: '#/components/schemas/Product_Detailed'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "201":
          description: Successful order creation
          content:
            application/json: {}
        "406 ":
          description: Not Acceptable user creation the username or email is token
          content:
            application/json: {}
  /api/users/{id}/imageProfile:
    get:
      tags:
      - user-rest-controler
      summary: Get a profile image user by id
      operationId: getImageProfile
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: User not found
          content: {}
        "204":
          description: Image not found
        "200":
          description: Found the Image Profile
          content:
            application/json: {}
    post:
      tags:
      - user-rest-controler
      summary: create a profile image user by id
      operationId: uploadImageProfile
      parameters:
      - name: id
        in: path
        description: id of user to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  description: user profile picture
                  format: binary
      responses:
        "404":
          description: User not found
          content: {}
        "204":
          description: Image not found
        "201":
          description: Create the ImageProfile
          content:
            application/json: {}
  /api/users/:
    post:
      tags:
      - user-rest-controler
      summary: Create a user
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_Detailed'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "406 ":
          description: Not Acceptable user creation the username or email is token
          content:
            application/json: {}
        "201":
          description: Successful user creation
          content:
            application/json: {}
  /api/products/{id}/ratings:
    get:
      tags:
      - products-rest-controller
      summary: Ratings
      operationId: getProductRatings
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      responses:
        "404":
          description: ratings not found
          content: {}
        "200":
          description: Found the ratings Product
          content:
            application/json: {}
        "204":
          description: ratings not found
    post:
      tags:
      - products-rest-controller
      summary: Ratings
      operationId: setProductRatings
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ratingtext:
                  type: string
                  description: Text of rating
                iduser:
                  type: integer
                  description: Id user
                  format: int32
        required: true
      responses:
        "404":
          description: ratings not found
          content: {}
        "200":
          description: Found the ratings Product
          content:
            application/json: {}
        "204":
          description: ratings not found
  /api/products/{id}/image3:
    get:
      tags:
      - products-rest-controller
      summary: Get a Image 3 Product by its id
      operationId: getImage3
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
    post:
      tags:
      - products-rest-controller
      summary: Create a Image 3 Product by its id
      operationId: uploadImage3
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  description: Image 3 Product
                  format: binary
      responses:
        "404":
          description: Product not found
          content: {}
        "201":
          description: Create the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
  /api/products/{id}/image2:
    get:
      tags:
      - products-rest-controller
      summary: Get a Image 2 Product by its id
      operationId: getImage2
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
    post:
      tags:
      - products-rest-controller
      summary: Create a Image 2 Product by its id
      operationId: uploadImage2
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  description: Image 2 Product
                  format: binary
      responses:
        "404":
          description: Product not found
          content: {}
        "201":
          description: Create the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
  /api/products/{id}/image1:
    get:
      tags:
      - products-rest-controller
      summary: Get a Image 1 Product by its id
      operationId: getImage1
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
    post:
      tags:
      - products-rest-controller
      summary: Create a Image 1 Product by its id
      operationId: uploadImage1
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  description: Image 1 Product
                  format: binary
      responses:
        "404":
          description: Product not found
          content: {}
        "201":
          description: Create the Image Product
          content:
            application/json: {}
        "204":
          description: Image not found
  /api/products/:
    get:
      tags:
      - products-rest-controller
      summary: Get New Six Products
      operationId: getAllProducts
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: Found the Products
          content:
            application/json: {}
    post:
      tags:
      - products-rest-controller
      summary: Create a Products
      operationId: registerProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product_Detailed'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "406":
          description: Not Acceptable Post title exists
        "201":
          description: Successful Products creation
          content:
            application/json: {}
  /api/auth/refresh:
    post:
      tags:
      - login-api-controller
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/logout:
    post:
      tags:
      - login-api-controller
      operationId: logOut
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-api-controller
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/products/phones:
    get:
      tags:
      - products-rest-controller
      summary: Get a phone
      operationId: getPhonesPage
      parameters:
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      - name: typeProduct
        in: query
        description: typeProduct
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Product
          content:
            application/json: {}
  /api/products/peripherals:
    get:
      tags:
      - products-rest-controller
      summary: Get a peripheral
      operationId: getPeripheralsPage
      parameters:
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      - name: typeProduct
        in: query
        description: typeProduct
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Product
          content:
            application/json: {}
  /api/products/components:
    get:
      tags:
      - products-rest-controller
      summary: Get a component
      operationId: getComponentsPage
      parameters:
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      - name: typeProduct
        in: query
        description: typeProduct
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Product not found
          content: {}
        "200":
          description: Found the Product
          content:
            application/json: {}
  /api/admins/statistics:
    get:
      tags:
      - admin-rest-controller
      summary: Get a all Statistics
      operationId: getStatistics
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: Found the statistics
          content:
            application/json: {}
  /api/admins/orders:
    get:
      tags:
      - admin-rest-controller
      summary: Get a all orders
      operationId: getOrders
      parameters:
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: Found the orders
          content:
            application/json: {}
  /api/admins/customers:
    get:
      tags:
      - admin-rest-controller
      summary: Get a all users type customers
      operationId: getUsers
      parameters:
      - name: page
        in: query
        description: page
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: Found the Users type customers
          content:
            application/json: {}
components:
  schemas:
    User_Detailed:
      type: object
      properties:
        iduser:
          type: integer
          format: int32
        email:
          type: string
        username:
          type: string
        pass:
          type: string
        completname:
          type: string
        userprofile:
          type: boolean
        address:
          type: string
      description: Object Json Type Users
    Product_Detailed:
      type: object
      properties:
        idproduct:
          type: integer
          format: int32
        nameproduct:
          type: string
        price:
          type: number
          format: float
        description:
          type: string
        ratingProducto:
          type: number
          format: float
        productType:
          type: string
        productcategory:
          type: string
        productbrand:
          type: string
        img1:
          type: boolean
        img2:
          type: boolean
        img3:
          type: boolean
      description: Object Type Product
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
